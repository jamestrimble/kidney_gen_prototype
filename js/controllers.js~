'use strict';

/* Controllers */

var phonecatApp = angular.module('datagenApp', []);

phonecatApp.controller('GeneratorCtrl', function($scope) {
  /*$scope.phones = [
    {'name': 'Nexus S',
     'snippet': 'Fast just got faster with Nexus S.'},
    {'name': 'Motorola XOOM™ with Wi-Fi',
     'snippet': 'The Next, Next Generation tablet.'},
    {'name': 'MOTOROLA XOOM™',
     'snippet': 'The Next, Next Generation tablet.'}
  ];*/


  $scope.donorTypeO = 0.4;
  $scope.donorTypeA = 0.4;
  $scope.donorTypeB = 0.1;
  $scope.donorTypeAB = function(x) {
      return +(1-$scope.donorTypeO-$scope.donorTypeA-$scope.donorTypeB).toFixed(4);
  };

  $scope.patientTypeO = 0.4;
  $scope.patientTypeA = 0.4;
  $scope.patientTypeB = 0.1;
  $scope.patientTypeAB = function(x) {
      return +(1-$scope.patientTypeO-$scope.patientTypeA-$scope.patientTypeB).toFixed(4);
  };

  $scope.donorsPerPatient1 = 1;
  $scope.donorsPerPatient2 = 0;
  $scope.donorsPerPatient3 = 0;
  $scope.donorsPerPatient4 = function(x) {
      return +(1-$scope.donorsPerPatient1-$scope.donorsPerPatient2-$scope.donorsPerPatient3).toFixed(4);
  };

  $scope.probSpousal = 0;
  $scope.probFemale = 0;
  $scope.probSpousalPraCompatibility = 0;

  $scope.crfDistribution = "0.2 0.11\n0.8 0.89";

  $scope.fileFormat = "xml";
  $scope.patientsPerInstance = 50;
  $scope.numberOfInstances = 5;
  $scope.proportionAltruistic = 0;

  
  $scope.onSubmitted = function() {
    var genConfig = {
      donorCountProbabilities: [
        $scope.donorsPerPatient1,
        $scope.donorsPerPatient2,
        $scope.donorsPerPatient3,
        $scope.donorsPerPatient4
      ],
      donorBtDistribution: new BloodTypeDistribution(
        $scope.donorTypeO,
        $scope.donorTypeA,
        $scope.donorTypeB,
        $scope.donorTypeAB
      ),
      patientBtDistribution: new BloodTypeDistribution(
        $scope.patientTypeO,
        $scope.patientTypeA,
        $scope.patientTypeB,
        $scope.patientTypeAB
      ),
      probSpousal: $scope.probSpousal,
      probFemale: $scope.probFemale,
      probSpousalPraCompatibility: $scope.probSpousalPraCompatibility,
      numberOfInstances: $scope.numberOfInstances,
      patientsPerInstance: $scope.patientsPerInstance,
      proportionAltruistic: $scope.proportionAltruistic,
      fileFormat: $scope.fileFormat,
      praBandsString: $scope.crfDistribution
    }
    console.log(genConfig);
    var gen = new KidneyGenerator(genConfig);
    var zip = new JSZip();
    $("#progress-message").text("Generating instance 0");
      setTimeout(function() {
        generateInstances(zip, gen, genConfig, 0);
      }, 1);
    }
});

// TODO: put this somewhere other than global scope
var generateInstances = function(zip, gen, genConfig, i) {
  var generatedDataset =
      gen.generateDataset(genConfig.patientsPerInstance,
                          genConfig.proportionAltruistic);
  if (genConfig.fileFormat==="xml") {
    zip.file("genxml-" + i + ".xml", generatedDataset.toXmlString());
  } else if (genConfig.fileFormat==="json") {
    zip.file("genjson-" + i + ".json", generatedDataset.toJsonString());
  }

  if (++i < gen.numberOfInstances) {
    $("#progress-message").text("Generating instance " + i);
    setTimeout(function() {generateInstances(zip, gen, genConfig, i)}, 1);
  } else {
    $("#progress-message").text("Creating zip file.");
    setTimeout(function() {
      var content = zip.generate({type:"blob"});
      saveAs(content, "generated.zip");
      $("#progress-message").text("Finished.");
    }, 1);
  }
};

/*$( "#generator-form" ).on( "submit", function( event ) {
  event.preventDefault();
  var genConfig = $( this ).serializeObject();
  ////console.log(genConfig);
  var gen = new KidneyGenerator(genConfig);
  var zip = new JSZip();
  
  $("#progress-message").text("Generating instance 0");
  setTimeout(function() {
    generateInstances(zip, gen, 0);
  }, 1);
});
*/


